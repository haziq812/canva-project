{"version":3,"file":"useLayerManager.js","sourceRoot":"","sources":["../../src/manager/useLayerManager.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,OAAO,CAAC;AAE5C,OAAO,EAAE,mBAAmB,EAAE,MAAM,WAAW,CAAC;AAIhD,MAAM,UAAU,eAAe,CAAI,SAAoC;IACrE,MAAM,EAAE,KAAK,EAAE,GAAG,UAAU,CAAC,mBAAmB,CAAC,CAAC;IAClD,MAAM,SAAS,GAAG,YAAY,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;IAEjD,OAAO,OAAO,CACZ,GAAG,EAAE,CAAC,CAAC;QACL,KAAK;QACL,GAAG,SAAS;KACb,CAAC,EACF,CAAC,KAAK,EAAE,SAAS,CAAC,CACnB,CAAC;AACJ,CAAC","sourcesContent":["import { useCollector } from '@craftjs/utils';\nimport { useContext, useMemo } from 'react';\n\nimport { LayerManagerContext } from './context';\n\nimport { LayerState } from '../interfaces';\n\nexport function useLayerManager<C>(collector?: (state: LayerState) => C) {\n  const { store } = useContext(LayerManagerContext);\n  const collected = useCollector(store, collector);\n\n  return useMemo(\n    () => ({\n      store,\n      ...collected,\n    }),\n    [store, collected]\n  );\n}\n"]}