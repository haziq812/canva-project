{"ast":null,"code":"var _jsxFileName = \"C:\\\\laragon\\\\www\\\\my-irbm\\\\src\\\\components\\\\MyCol.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Element, useNode, useEditor } from \"@craftjs/core\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Column = ({\n  children,\n  className,\n  ...props\n}) => {\n  _s();\n  const {\n    connectors: {\n      connect\n    }\n  } = useNode();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...props,\n    ref: connect,\n    className: 'col ' + className,\n    children: children ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 19\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"div-empty\",\n      children: \"Empty Col\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 65\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n_s(Column, \"9p4wtBa0CtrXGJq4i29jaFISruU=\", false, function () {\n  return [useNode];\n});\n_c = Column;\nexport default function MyCol({\n  children,\n  ...props\n}) {\n  _s2();\n  const {\n    enabled\n  } = useEditor(state => ({\n    enabled: state.options.enabled\n  }));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children !== null && children !== void 0 ? children : [...Array(1).keys()].map(id => /*#__PURE__*/_jsxDEV(Element, {\n      is: Column,\n      id: 'col-' + Math.floor(Math.random() * 1000) + 1,\n      canvas: true,\n      className: 'col'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this))\n  }, void 0, false);\n}\n\n// const ColumnsSettings = () => {\n//   const {\n//     actions: { setProp },\n//     numberOfCols,\n//     gap,\n//   } = useNode((node) => ({\n//     numberOfCols: node.data.props.numberOfCols,\n//     gap: node.data.props.gap,\n//   }));\n//   return (\n//     <>\n//       <Label label=\"Number of columns\">\n//         <TextInput\n//           type=\"number\"\n//           defaultValue={numberOfCols}\n//           step={1}\n//           min={1}\n//           max={10}\n//           onChange={(e) => {\n//             setProp(\n//               (props) => (props.numberOfCols = parseInt(e.target.value, 10)),\n//               1000\n//             );\n//           }}\n//         />\n//       </Label>\n//       <Label label=\"Gap\">\n//         <TextInput\n//           type=\"number\"\n//           defaultValue={gap}\n//           step={1}\n//           min={0}\n//           max={10}\n//           onChange={(e) => {\n//             setProp(\n//               (props) => (props.gap = parseInt(e.target.value, 10)),\n//               1000\n//             );\n//           }}\n//         />\n//       </Label>\n//     </>\n//   );\n// };\n\n// export const ColumnsDefaultProps = {\n//   numberOfCols: 2,\n//   gap: 0,\n// };\n\n// Columns.craft = {\n//   props: ColumnsDefaultProps,\n//   related: {\n//     settings: ColumnsSettings,\n//   },\n// };\n_s2(MyCol, \"65lKN37A59ENpRfItbOcPUAI1eM=\", false, function () {\n  return [useEditor];\n});\n_c2 = MyCol;\nvar _c, _c2;\n$RefreshReg$(_c, \"Column\");\n$RefreshReg$(_c2, \"MyCol\");","map":{"version":3,"names":["React","Element","useNode","useEditor","jsxDEV","_jsxDEV","Fragment","_Fragment","Column","children","className","props","_s","connectors","connect","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","MyCol","_s2","enabled","state","options","Array","keys","map","id","is","Math","floor","random","canvas","_c2","$RefreshReg$"],"sources":["C:/laragon/www/my-irbm/src/components/MyCol.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Element, useNode, useEditor } from \"@craftjs/core\";\r\n\r\nexport const Column = ({ children, className, ...props }) => {\r\n  const {\r\n    connectors: { connect },\r\n  } = useNode();\r\n\r\n  return (\r\n    <div {...props} ref={connect} className={'col ' + className}>\r\n      {children ? <React.Fragment>{children}</React.Fragment> : <div className='div-empty'>Empty Col</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function MyCol({ children, ...props }) {\r\n  const { enabled } = useEditor((state) => ({\r\n    enabled: state.options.enabled,\r\n  }));\r\n\r\n  \r\n      return (<>\r\n        {children ??\r\n        [...Array(1).keys()].map((id) => (\r\n            <Element\r\n              is={Column}\r\n              id={'col-' + Math.floor(Math.random() * 1000) + 1} \r\n              canvas\r\n              className={'col'}\r\n            \r\n            />\r\n            ))\r\n          }\r\n          </>\r\n      );\r\n}\r\n\r\n\r\n// const ColumnsSettings = () => {\r\n//   const {\r\n//     actions: { setProp },\r\n//     numberOfCols,\r\n//     gap,\r\n//   } = useNode((node) => ({\r\n//     numberOfCols: node.data.props.numberOfCols,\r\n//     gap: node.data.props.gap,\r\n//   }));\r\n//   return (\r\n//     <>\r\n//       <Label label=\"Number of columns\">\r\n//         <TextInput\r\n//           type=\"number\"\r\n//           defaultValue={numberOfCols}\r\n//           step={1}\r\n//           min={1}\r\n//           max={10}\r\n//           onChange={(e) => {\r\n//             setProp(\r\n//               (props) => (props.numberOfCols = parseInt(e.target.value, 10)),\r\n//               1000\r\n//             );\r\n//           }}\r\n//         />\r\n//       </Label>\r\n//       <Label label=\"Gap\">\r\n//         <TextInput\r\n//           type=\"number\"\r\n//           defaultValue={gap}\r\n//           step={1}\r\n//           min={0}\r\n//           max={10}\r\n//           onChange={(e) => {\r\n//             setProp(\r\n//               (props) => (props.gap = parseInt(e.target.value, 10)),\r\n//               1000\r\n//             );\r\n//           }}\r\n//         />\r\n//       </Label>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export const ColumnsDefaultProps = {\r\n//   numberOfCols: 2,\r\n//   gap: 0,\r\n// };\r\n\r\n// Columns.craft = {\r\n//   props: ColumnsDefaultProps,\r\n//   related: {\r\n//     settings: ColumnsSettings,\r\n//   },\r\n// };"],"mappings":";;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,OAAO,EAAEC,OAAO,EAAEC,SAAS,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5D,OAAO,MAAMC,MAAM,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAE,GAAGC;AAAM,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM;IACJC,UAAU,EAAE;MAAEC;IAAQ;EACxB,CAAC,GAAGZ,OAAO,CAAC,CAAC;EAEb,oBACEG,OAAA;IAAA,GAASM,KAAK;IAAEI,GAAG,EAAED,OAAQ;IAACJ,SAAS,EAAE,MAAM,GAAGA,SAAU;IAAAD,QAAA,EACzDA,QAAQ,gBAAGJ,OAAA,CAACL,KAAK,CAACM,QAAQ;MAAAG,QAAA,EAAEA;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiB,CAAC,gBAAGd,OAAA;MAAKK,SAAS,EAAC,WAAW;MAAAD,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjG,CAAC;AAEV,CAAC;AAACP,EAAA,CAVWJ,MAAM;EAAA,QAGbN,OAAO;AAAA;AAAAkB,EAAA,GAHAZ,MAAM;AAYnB,eAAe,SAASa,KAAKA,CAAC;EAAEZ,QAAQ;EAAE,GAAGE;AAAM,CAAC,EAAE;EAAAW,GAAA;EACpD,MAAM;IAAEC;EAAQ,CAAC,GAAGpB,SAAS,CAAEqB,KAAK,KAAM;IACxCD,OAAO,EAAEC,KAAK,CAACC,OAAO,CAACF;EACzB,CAAC,CAAC,CAAC;EAGC,oBAAQlB,OAAA,CAAAE,SAAA;IAAAE,QAAA,EACLA,QAAQ,aAARA,QAAQ,cAARA,QAAQ,GACT,CAAC,GAAGiB,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,EAAE,iBACxBxB,OAAA,CAACJ,OAAO;MACN6B,EAAE,EAAEtB,MAAO;MACXqB,EAAE,EAAE,MAAM,GAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAE;MAClDC,MAAM;MACNxB,SAAS,EAAE;IAAM;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAElB,CACA;EAAC,gBAEF,CAAC;AAEb;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAAG,GAAA,CA9EwBD,KAAK;EAAA,QACPlB,SAAS;AAAA;AAAAgC,GAAA,GADPd,KAAK;AAAA,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}