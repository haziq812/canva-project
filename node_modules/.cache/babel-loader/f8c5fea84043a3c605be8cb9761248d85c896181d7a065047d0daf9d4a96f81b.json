{"ast":null,"code":"import React from'react';import{Element,useNode,useEditor}from\"@craftjs/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const Column=_ref=>{let{children,className,...props}=_ref;const{connectors:{connect}}=useNode();return/*#__PURE__*/_jsx(\"div\",{...props,ref:connect,className:'col '+className,children:children?/*#__PURE__*/_jsx(React.Fragment,{children:children}):/*#__PURE__*/_jsx(\"div\",{className:\"div-empty\",children:\"Empty Col\"})});};export default function MyCol(_ref2){let{children,...props}=_ref2;const{enabled}=useEditor(state=>({enabled:state.options.enabled}));return/*#__PURE__*/_jsx(_Fragment,{children:children!==null&&children!==void 0?children:[...Array(1).keys()].map(id=>/*#__PURE__*/_jsx(Element,{is:Column,id:'col-'+Math.floor(Math.random()*1000)+1,canvas:true,className:'col'}))});}// const ColumnsSettings = () => {\n//   const {\n//     actions: { setProp },\n//     numberOfCols,\n//     gap,\n//   } = useNode((node) => ({\n//     numberOfCols: node.data.props.numberOfCols,\n//     gap: node.data.props.gap,\n//   }));\n//   return (\n//     <>\n//       <Label label=\"Number of columns\">\n//         <TextInput\n//           type=\"number\"\n//           defaultValue={numberOfCols}\n//           step={1}\n//           min={1}\n//           max={10}\n//           onChange={(e) => {\n//             setProp(\n//               (props) => (props.numberOfCols = parseInt(e.target.value, 10)),\n//               1000\n//             );\n//           }}\n//         />\n//       </Label>\n//       <Label label=\"Gap\">\n//         <TextInput\n//           type=\"number\"\n//           defaultValue={gap}\n//           step={1}\n//           min={0}\n//           max={10}\n//           onChange={(e) => {\n//             setProp(\n//               (props) => (props.gap = parseInt(e.target.value, 10)),\n//               1000\n//             );\n//           }}\n//         />\n//       </Label>\n//     </>\n//   );\n// };\n// export const ColumnsDefaultProps = {\n//   numberOfCols: 2,\n//   gap: 0,\n// };\n// Columns.craft = {\n//   props: ColumnsDefaultProps,\n//   related: {\n//     settings: ColumnsSettings,\n//   },\n// };","map":{"version":3,"names":["React","Element","useNode","useEditor","jsx","_jsx","Fragment","_Fragment","Column","_ref","children","className","props","connectors","connect","ref","MyCol","_ref2","enabled","state","options","Array","keys","map","id","is","Math","floor","random","canvas"],"sources":["C:/laragon/www/my-irbm/src/components/MyCol.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Element, useNode, useEditor } from \"@craftjs/core\";\r\n\r\nexport const Column = ({ children, className, ...props }) => {\r\n  const {\r\n    connectors: { connect },\r\n  } = useNode();\r\n\r\n  return (\r\n    <div {...props} ref={connect} className={'col ' + className}>\r\n      {children ? <React.Fragment>{children}</React.Fragment> : <div className='div-empty'>Empty Col</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default function MyCol({ children, ...props }) {\r\n  const { enabled } = useEditor((state) => ({\r\n    enabled: state.options.enabled,\r\n  }));\r\n\r\n  \r\n      return (<>\r\n        {children ??\r\n        [...Array(1).keys()].map((id) => (\r\n            <Element\r\n              is={Column}\r\n              id={'col-' + Math.floor(Math.random() * 1000) + 1} \r\n              canvas\r\n              className={'col'}\r\n            \r\n            />\r\n            ))\r\n          }\r\n          </>\r\n      );\r\n}\r\n\r\n\r\n// const ColumnsSettings = () => {\r\n//   const {\r\n//     actions: { setProp },\r\n//     numberOfCols,\r\n//     gap,\r\n//   } = useNode((node) => ({\r\n//     numberOfCols: node.data.props.numberOfCols,\r\n//     gap: node.data.props.gap,\r\n//   }));\r\n//   return (\r\n//     <>\r\n//       <Label label=\"Number of columns\">\r\n//         <TextInput\r\n//           type=\"number\"\r\n//           defaultValue={numberOfCols}\r\n//           step={1}\r\n//           min={1}\r\n//           max={10}\r\n//           onChange={(e) => {\r\n//             setProp(\r\n//               (props) => (props.numberOfCols = parseInt(e.target.value, 10)),\r\n//               1000\r\n//             );\r\n//           }}\r\n//         />\r\n//       </Label>\r\n//       <Label label=\"Gap\">\r\n//         <TextInput\r\n//           type=\"number\"\r\n//           defaultValue={gap}\r\n//           step={1}\r\n//           min={0}\r\n//           max={10}\r\n//           onChange={(e) => {\r\n//             setProp(\r\n//               (props) => (props.gap = parseInt(e.target.value, 10)),\r\n//               1000\r\n//             );\r\n//           }}\r\n//         />\r\n//       </Label>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export const ColumnsDefaultProps = {\r\n//   numberOfCols: 2,\r\n//   gap: 0,\r\n// };\r\n\r\n// Columns.craft = {\r\n//   props: ColumnsDefaultProps,\r\n//   related: {\r\n//     settings: ColumnsSettings,\r\n//   },\r\n// };"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,CAAEC,OAAO,CAAEC,SAAS,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAE5D,MAAO,MAAM,CAAAC,MAAM,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,QAAQ,CAAEC,SAAS,CAAE,GAAGC,KAAM,CAAC,CAAAH,IAAA,CACtD,KAAM,CACJI,UAAU,CAAE,CAAEC,OAAQ,CACxB,CAAC,CAAGZ,OAAO,CAAC,CAAC,CAEb,mBACEG,IAAA,WAASO,KAAK,CAAEG,GAAG,CAAED,OAAQ,CAACH,SAAS,CAAE,MAAM,CAAGA,SAAU,CAAAD,QAAA,CACzDA,QAAQ,cAAGL,IAAA,CAACL,KAAK,CAACM,QAAQ,EAAAI,QAAA,CAAEA,QAAQ,CAAiB,CAAC,cAAGL,IAAA,QAAKM,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAC,WAAS,CAAK,CAAC,CACjG,CAAC,CAEV,CAAC,CAED,cAAe,SAAS,CAAAM,KAAKA,CAAAC,KAAA,CAAyB,IAAxB,CAAEP,QAAQ,CAAE,GAAGE,KAAM,CAAC,CAAAK,KAAA,CAClD,KAAM,CAAEC,OAAQ,CAAC,CAAGf,SAAS,CAAEgB,KAAK,GAAM,CACxCD,OAAO,CAAEC,KAAK,CAACC,OAAO,CAACF,OACzB,CAAC,CAAC,CAAC,CAGC,mBAAQb,IAAA,CAAAE,SAAA,EAAAG,QAAA,CACLA,QAAQ,SAARA,QAAQ,UAARA,QAAQ,CACT,CAAC,GAAGW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,EAAE,eACxBnB,IAAA,CAACJ,OAAO,EACNwB,EAAE,CAAEjB,MAAO,CACXgB,EAAE,CAAE,MAAM,CAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAG,CAAE,CAClDC,MAAM,MACNlB,SAAS,CAAE,KAAM,CAElB,CACA,CAAC,CAEF,CAAC,CAEb,CAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}