{"ast":null,"code":"import React from'react';import{Element,useNode,useEditor}from\"@craftjs/core\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export const Row=_ref=>{let{children,className,...props}=_ref;const{connectors:{connect}}=useNode();return/*#__PURE__*/_jsx(\"div\",{...props,ref:connect,className:'row '+className,children:children?/*#__PURE__*/_jsx(React.Fragment,{children:children}):/*#__PURE__*/_jsx(\"div\",{className:\"div-empty\",children:\"Empty Row\"})});};export default function MyRow(_ref2){let{children,...props}=_ref2;const{enabled}=useEditor(state=>({enabled:state.options.enabled}));return/*#__PURE__*/_jsx(_Fragment,{children:children!==null&&children!==void 0?children:[...Array(1).keys()].map(id=>/*#__PURE__*/_jsx(Element,{is:Row,id:'row-'+Math.floor(Math.random()*1000)+1,canvas:true,className:'row'}))});}","map":{"version":3,"names":["React","Element","useNode","useEditor","jsx","_jsx","Fragment","_Fragment","Row","_ref","children","className","props","connectors","connect","ref","MyRow","_ref2","enabled","state","options","Array","keys","map","id","is","Math","floor","random","canvas"],"sources":["C:/laragon/www/my-irbm/src/components/MyRow.jsx"],"sourcesContent":["import React from 'react';\r\nimport { Element, useNode, useEditor } from \"@craftjs/core\";\r\n\r\n\r\nexport const Row = ({ children, className, ...props }) => {\r\n  const {\r\n    connectors: { connect },\r\n  } = useNode();\r\n\r\n  return (\r\n    <div {...props} ref={connect} className={'row ' + className}>\r\n      {children ? <React.Fragment>{children}</React.Fragment> : <div className='div-empty'>Empty Row</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default function MyRow({ children, ...props }) {\r\n  const { enabled } = useEditor((state) => ({\r\n    enabled: state.options.enabled,\r\n  }));\r\n\r\n  \r\n      return (<>\r\n        {children ??\r\n        [...Array(1).keys()].map((id) => (\r\n            <Element\r\n              is={Row}\r\n              id={'row-' + Math.floor(Math.random() * 1000) + 1} \r\n              canvas\r\n              className={'row'}\r\n            \r\n            />\r\n            ))\r\n          }\r\n          </>\r\n      );\r\n}\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,OAAO,CAAEC,OAAO,CAAEC,SAAS,KAAQ,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,yBAG5D,MAAO,MAAM,CAAAC,GAAG,CAAGC,IAAA,EAAuC,IAAtC,CAAEC,QAAQ,CAAEC,SAAS,CAAE,GAAGC,KAAM,CAAC,CAAAH,IAAA,CACnD,KAAM,CACJI,UAAU,CAAE,CAAEC,OAAQ,CACxB,CAAC,CAAGZ,OAAO,CAAC,CAAC,CAEb,mBACEG,IAAA,WAASO,KAAK,CAAEG,GAAG,CAAED,OAAQ,CAACH,SAAS,CAAE,MAAM,CAAGA,SAAU,CAAAD,QAAA,CACzDA,QAAQ,cAAGL,IAAA,CAACL,KAAK,CAACM,QAAQ,EAAAI,QAAA,CAAEA,QAAQ,CAAiB,CAAC,cAAGL,IAAA,QAAKM,SAAS,CAAC,WAAW,CAAAD,QAAA,CAAC,WAAS,CAAK,CAAC,CACjG,CAAC,CAEV,CAAC,CAGD,cAAe,SAAS,CAAAM,KAAKA,CAAAC,KAAA,CAAyB,IAAxB,CAAEP,QAAQ,CAAE,GAAGE,KAAM,CAAC,CAAAK,KAAA,CAClD,KAAM,CAAEC,OAAQ,CAAC,CAAGf,SAAS,CAAEgB,KAAK,GAAM,CACxCD,OAAO,CAAEC,KAAK,CAACC,OAAO,CAACF,OACzB,CAAC,CAAC,CAAC,CAGC,mBAAQb,IAAA,CAAAE,SAAA,EAAAG,QAAA,CACLA,QAAQ,SAARA,QAAQ,UAARA,QAAQ,CACT,CAAC,GAAGW,KAAK,CAAC,CAAC,CAAC,CAACC,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAEC,EAAE,eACxBnB,IAAA,CAACJ,OAAO,EACNwB,EAAE,CAAEjB,GAAI,CACRgB,EAAE,CAAE,MAAM,CAAGE,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,CAAG,IAAI,CAAC,CAAG,CAAE,CAClDC,MAAM,MACNlB,SAAS,CAAE,KAAM,CAElB,CACA,CAAC,CAEF,CAAC,CAEb"},"metadata":{},"sourceType":"module","externalDependencies":[]}